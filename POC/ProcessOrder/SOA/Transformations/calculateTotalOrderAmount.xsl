<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ns0="http://www.oracle.com/soasample"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 xp20 xref mhdr oraext dvm socket"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:tns="http://www.oracle.com/ProcessOrder">
    <oracle-xsl-mapper:schema>
        <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
        <oracle-xsl-mapper:mapSources>
            <oracle-xsl-mapper:source type="WSDL">
                <oracle-xsl-mapper:schema location="../WSDLs/ProcessOrder.wsdl"/>
                <oracle-xsl-mapper:rootElement name="Order" namespace="http://www.oracle.com/soasample"/>
            </oracle-xsl-mapper:source>
        </oracle-xsl-mapper:mapSources>
        <oracle-xsl-mapper:mapTargets>
            <oracle-xsl-mapper:target type="WSDL">
                <oracle-xsl-mapper:schema location="../WSDLs/ProcessOrder.wsdl"/>
                <oracle-xsl-mapper:rootElement name="TotalOrderAmount" namespace="http://www.oracle.com/soasample"/>
            </oracle-xsl-mapper:target>
        </oracle-xsl-mapper:mapTargets>
        <oracle-xsl-mapper:named-template-schema>
            <oracle-xsl-mapper:template name="computeTotal">
                <oracle-xsl-mapper:mapSources>
                    <oracle-xsl-mapper:source type="XSD">
                        <oracle-xsl-mapper:schema location="../Schemas/CanonicalOrder.xsd"/>
                        <oracle-xsl-mapper:rootElement name="ItemType" namespace=""/>
                        <oracle-xsl-mapper:rootElementDatatype name="ItemType"
                                                               namespace="http://www.oracle.com/soasample"/>
                        <oracle-xsl-mapper:param name="itemsLeft"/>
                        <oracle-xsl-mapper:path>
                            <oracle-xsl-mapper:element name="ItemType"/>
                        </oracle-xsl-mapper:path>
                    </oracle-xsl-mapper:source>
                </oracle-xsl-mapper:mapSources>
            </oracle-xsl-mapper:template>
        </oracle-xsl-mapper:named-template-schema>
        <!--GENERATED BY ORACLE XSL MAPPER 12.1.2.0.0(XSLT Build 130301.1000.4176) AT [SUN MAR 24 19:40:57 PDT 2013].-->
    </oracle-xsl-mapper:schema>
    <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
    <xsl:template match="/">
        <ns0:TotalOrderAmount>
            <xsl:call-template name="computeTotal">
                <xsl:with-param name="itemsLeft" select="/ns0:Order/ns0:Items/ns0:Item"/>
                <xsl:with-param name="totalSoFar">0</xsl:with-param>
            </xsl:call-template>
        </ns0:TotalOrderAmount>
    </xsl:template>
    <xsl:template name="computeTotal">
        <xsl:param name="itemsLeft"/>
        <xsl:param name="totalSoFar"/>
        <xsl:choose>
            <xsl:when test="$itemsLeft">
                <xsl:variable name="itemTotal" select="$itemsLeft[1]/ns0:UnitPrice * $itemsLeft[1]/ns0:Quantity"/>
                <xsl:call-template name="computeTotal">
                    <xsl:with-param name="itemsLeft" select="$itemsLeft[position()> 1]"/>
                    <xsl:with-param name="totalSoFar" select="$totalSoFar + $itemTotal"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="$totalSoFar"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
</xsl:stylesheet>
